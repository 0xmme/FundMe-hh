{
  "address": "0x14594f545d23bA5D56F42D90a8A8e26280eF1C18",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "notEnoughEthSent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd40834bd1d19d8193e029252c0649c0fe90b8a1f3f25aa272ec37534e133d402",
  "receipt": {
    "to": null,
    "from": "0x25549a401f9C04c51d13202f6C87A2c244325A5C",
    "contractAddress": "0x14594f545d23bA5D56F42D90a8A8e26280eF1C18",
    "transactionIndex": 1,
    "gasUsed": "805687",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xc55392706c02e13470282f457f92051b0f91497cdeb0ab660addfc01f8e692ae",
    "transactionHash": "0xd40834bd1d19d8193e029252c0649c0fe90b8a1f3f25aa272ec37534e133d402",
    "logs": [],
    "blockNumber": 10913857,
    "cumulativeGasUsed": "848267",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8a753747a1fa494ec906ce90e9f37563a8af630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "ccbd4b874ba8893cf72bd17f3806d0eb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"notEnoughEthSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror notEnoughEthSent();\\nerror notOwner();\\n\\ncontract FundMe {\\n    address immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(priceFeed) < MIN_USD) {\\n            revert notEnoughEthSent();\\n        }\\n\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            addressToAmountFunded[funders[funderIndex]] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert notOwner();\\n        }\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x63eab32d8ae9101556fc216533f6f3e629fc27e8cb883b993143988d10076c5a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xf065355ec636076563c3f8631311a6a394b165d4c6303a7d4c6701b7faf50067\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e8d380380610e8d83398181016040528101906100329190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b60805160601c610d3061015d60003960006102900152610d306000f3fe6080604052600436106100595760003560e01c8063213dbea2146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063741bef1a146100f1578063b60d42881461011c578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b50610087610281565b60405161009491906106e0565b60405180910390f35b3480156100a957600080fd5b506100b261028e565b005b3480156100c057600080fd5b506100db60048036038101906100d6919061075e565b6104c9565b6040516100e891906106e0565b60405180910390f35b3480156100fd57600080fd5b506101066104e1565b60405161011391906107ea565b60405180910390f35b610124610163565b005b34801561013257600080fd5b5061014d60048036038101906101489190610831565b610505565b60405161015a919061086d565b60405180910390f35b6802b5e3af16b18800006101a060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461054490919063ffffffff16565b10156101d8576040517f35a5893a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103b9576000600260006001848154811061033d5761033c610888565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103b1906108e6565b915050610316565b50600067ffffffffffffffff8111156103d5576103d461092f565b5b6040519080825280602002602001820160405280156104035781602001602082028036833780820191505090505b5060019080519060200190610419929190610620565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104409061098f565b60006040518083038185875af1925050503d806000811461047d576040519150601f19603f3d011682016040523d82523d6000602084013e610482565b606091505b50509050806104c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bd90610a01565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061051557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061055083610580565b90506000670de0b6b3a764000085836105699190610a21565b6105739190610aaa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105c957600080fd5b505afa1580156105dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106019190610b68565b5050509150506402540be400816106189190610be3565b915050919050565b828054828255906000526020600020908101928215610699579160200282015b828111156106985782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610640565b5b5090506106a691906106aa565b5090565b5b808211156106c35760008160009055506001016106ab565b5090565b6000819050919050565b6106da816106c7565b82525050565b60006020820190506106f560008301846106d1565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061072b82610700565b9050919050565b61073b81610720565b811461074657600080fd5b50565b60008135905061075881610732565b92915050565b600060208284031215610774576107736106fb565b5b600061078284828501610749565b91505092915050565b6000819050919050565b60006107b06107ab6107a684610700565b61078b565b610700565b9050919050565b60006107c282610795565b9050919050565b60006107d4826107b7565b9050919050565b6107e4816107c9565b82525050565b60006020820190506107ff60008301846107db565b92915050565b61080e816106c7565b811461081957600080fd5b50565b60008135905061082b81610805565b92915050565b600060208284031215610847576108466106fb565b5b60006108558482850161081c565b91505092915050565b61086781610720565b82525050565b6000602082019050610882600083018461085e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108f1826106c7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610924576109236108b7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061097960008361095e565b915061098482610969565b600082019050919050565b600061099a8261096c565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b60006109eb600b836109a4565b91506109f6826109b5565b602082019050919050565b60006020820190508181036000830152610a1a816109de565b9050919050565b6000610a2c826106c7565b9150610a37836106c7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a7057610a6f6108b7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ab5826106c7565b9150610ac0836106c7565b925082610ad057610acf610a7b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610afa81610adb565b8114610b0557600080fd5b50565b600081519050610b1781610af1565b92915050565b6000819050919050565b610b3081610b1d565b8114610b3b57600080fd5b50565b600081519050610b4d81610b27565b92915050565b600081519050610b6281610805565b92915050565b600080600080600060a08688031215610b8457610b836106fb565b5b6000610b9288828901610b08565b9550506020610ba388828901610b3e565b9450506040610bb488828901610b53565b9350506060610bc588828901610b53565b9250506080610bd688828901610b08565b9150509295509295909350565b6000610bee82610b1d565b9150610bf983610b1d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c3857610c376108b7565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610c7557610c746108b7565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610cb257610cb16108b7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610cef57610cee6108b7565b5b82820290509291505056fea2646970667358221220ee71198b7c8d2d63f08080eab64145a7edef038313d8683388e6bebcd2c71bc664736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c8063213dbea2146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063741bef1a146100f1578063b60d42881461011c578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b50610087610281565b60405161009491906106e0565b60405180910390f35b3480156100a957600080fd5b506100b261028e565b005b3480156100c057600080fd5b506100db60048036038101906100d6919061075e565b6104c9565b6040516100e891906106e0565b60405180910390f35b3480156100fd57600080fd5b506101066104e1565b60405161011391906107ea565b60405180910390f35b610124610163565b005b34801561013257600080fd5b5061014d60048036038101906101489190610831565b610505565b60405161015a919061086d565b60405180910390f35b6802b5e3af16b18800006101a060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461054490919063ffffffff16565b10156101d8576040517f35a5893a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103b9576000600260006001848154811061033d5761033c610888565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103b1906108e6565b915050610316565b50600067ffffffffffffffff8111156103d5576103d461092f565b5b6040519080825280602002602001820160405280156104035781602001602082028036833780820191505090505b5060019080519060200190610419929190610620565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104409061098f565b60006040518083038185875af1925050503d806000811461047d576040519150601f19603f3d011682016040523d82523d6000602084013e610482565b606091505b50509050806104c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bd90610a01565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061051557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061055083610580565b90506000670de0b6b3a764000085836105699190610a21565b6105739190610aaa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105c957600080fd5b505afa1580156105dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106019190610b68565b5050509150506402540be400816106189190610be3565b915050919050565b828054828255906000526020600020908101928215610699579160200282015b828111156106985782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610640565b5b5090506106a691906106aa565b5090565b5b808211156106c35760008160009055506001016106ab565b5090565b6000819050919050565b6106da816106c7565b82525050565b60006020820190506106f560008301846106d1565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061072b82610700565b9050919050565b61073b81610720565b811461074657600080fd5b50565b60008135905061075881610732565b92915050565b600060208284031215610774576107736106fb565b5b600061078284828501610749565b91505092915050565b6000819050919050565b60006107b06107ab6107a684610700565b61078b565b610700565b9050919050565b60006107c282610795565b9050919050565b60006107d4826107b7565b9050919050565b6107e4816107c9565b82525050565b60006020820190506107ff60008301846107db565b92915050565b61080e816106c7565b811461081957600080fd5b50565b60008135905061082b81610805565b92915050565b600060208284031215610847576108466106fb565b5b60006108558482850161081c565b91505092915050565b61086781610720565b82525050565b6000602082019050610882600083018461085e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108f1826106c7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610924576109236108b7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061097960008361095e565b915061098482610969565b600082019050919050565b600061099a8261096c565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b60006109eb600b836109a4565b91506109f6826109b5565b602082019050919050565b60006020820190508181036000830152610a1a816109de565b9050919050565b6000610a2c826106c7565b9150610a37836106c7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a7057610a6f6108b7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ab5826106c7565b9150610ac0836106c7565b925082610ad057610acf610a7b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610afa81610adb565b8114610b0557600080fd5b50565b600081519050610b1781610af1565b92915050565b6000819050919050565b610b3081610b1d565b8114610b3b57600080fd5b50565b600081519050610b4d81610b27565b92915050565b600081519050610b6281610805565b92915050565b600080600080600060a08688031215610b8457610b836106fb565b5b6000610b9288828901610b08565b9550506020610ba388828901610b3e565b9450506040610bb488828901610b53565b9350506060610bc588828901610b53565b9250506080610bd688828901610b08565b9150509295509295909350565b6000610bee82610b1d565b9150610bf983610b1d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c3857610c376108b7565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610c7557610c746108b7565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610cb257610cb16108b7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610cef57610cee6108b7565b5b82820290509291505056fea2646970667358221220ee71198b7c8d2d63f08080eab64145a7edef038313d8683388e6bebcd2c71bc664736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 85,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 89,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}